// models/ChatSession.js
import mongoose from "mongoose";
const Schema = mongoose.Schema;

const messageSchema = new Schema({
  sender: {
    // 'user' or 'bot' (or 'model' if you prefer to align with Gemini's role)
    type: String,
    required: true,
    enum: ["user", "bot", "model"],
  },
  text: {
    type: String,
    required: true,
  },
  timestamp: {
    type: Date,
    default: Date.now,
  },
  // You could add more metadata per message if needed, e.g., messageId from Gemini
});

const chatSessionSchema = new Schema(
  {
    user: {
      // Reference to the User who owns this session
      type: Schema.Types.ObjectId,
      ref: "User",
      required: true,
      index: true,
    },
    title: {
      // Optional: A title for the chat session (e.g., first user message, or user-defined)
      type: String,
      trim: true,
      default: "New Chat Session",
    },
    messages: [messageSchema], // Array of messages
    lastActivity: {
      // To sort sessions by recent activity
      type: Date,
      default: Date.now,
      index: true,
    },
    // You could add other metadata like:
    // - A summary generated by an LLM
    // - Tags
    // - Archived status
  },
  {
    timestamps: true, // createdAt, updatedAt for the session itself
  }
);

// Update lastActivity whenever messages are added
chatSessionSchema.pre("save", function (next) {
  if (this.isModified("messages") && this.messages.length > 0) {
    this.lastActivity = new Date();
    if (
      this.messages.length === 1 &&
      this.messages[0].sender === "user" &&
      this.title === "New Chat Session"
    ) {
      // Auto-set title from the first user message (first 50 chars)
      this.title =
        this.messages[0].text.substring(0, 50) +
        (this.messages[0].text.length > 50 ? "..." : "");
    } else if (
      this.messages.length > 0 &&
      this.title === "New Chat Session" &&
      this.messages[0].sender !== "user"
    ) {
      // If first message is from bot (initial greeting), find first user message for title
      const firstUserMessage = this.messages.find((m) => m.sender === "user");
      if (firstUserMessage) {
        this.title =
          firstUserMessage.text.substring(0, 50) +
          (firstUserMessage.text.length > 50 ? "..." : "");
      }
    }
  }
  next();
});

export default mongoose.models.ChatSession ||
  mongoose.model("ChatSession", chatSessionSchema);
